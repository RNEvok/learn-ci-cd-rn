name: "iOS AppStore distribution Build"
on:
  workflow_call:
    inputs:
      publish:
        required: false
        type: boolean
        description: Publish to Appcenter
    secrets:
      P12_BASE64:
        required: true
      EVOK_MOBILE_PROVISION_BASE64:
        required: true
      CODE_SIGNING_IDENTITY:
        required: true
      CERTIFICATE_PASSWORD:
        required: true
      IOS_TEAM_ID:
        required: true
      APP_CENTER_TOKEN_IOS:
        required: true
      APPSTORE_ISSUER_ID:
        required: true
      APPSTORE_API_KEY_ID:
        required: true
      APPSTORE_API_PRIVATE_KEY:
        required: true

env:
  ARTIFACT_NAME: LearnCICDRN.ipa
jobs:
  build_ios:
    runs-on: macos-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install node modules
        run: yarn install --frozen-lockfile
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.10' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Restore Pods cache
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }} # Ключ для кэша
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install pod dependencies
        run: cd ios && pod install && cd ..
      - name: Build iOS (Release)
        uses: yukiarrr/ios-build-action@v1.11.2
        with:
          project-path: ios/learncicdrn.xcodeproj
          workspace-path: ios/learncicdrn.xcworkspace # optional
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.EVOK_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          certificate-password: ${{ secrets.CERTIFICATE_PASSWORD }}
          team-id: ${{ secrets.IOS_TEAM_ID }}
          output-path: "${{ env.ARTIFACT_NAME }}"
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          path: "${{ env.ARTIFACT_NAME }}"
          name: "${{ env.ARTIFACT_NAME }}"
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: "${{ env.ARTIFACT_NAME }}"

  publish_to_appcenter:
    if: ${{ inputs.publish == true }}
    runs-on: ubuntu-latest
    needs: build_ios
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "ios/"

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
          distribution: 'oracle'

      - name: Upload artifact to App Center
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: AppKlaar/LearnCICDRN-iOS
          token: ${{secrets.APP_CENTER_TOKEN_IOS}}
          group: Testers
          file: "ios/${{ env.ARTIFACT_NAME }}"
          notifyTesters: true
          debug: false
  upload_to_testflight:
    if: ${{ inputs.publish == true }}
    runs-on: ubuntu-latest
    needs: build_ios
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "ios/"
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: "ios/${{ env.ARTIFACT_NAME }}"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}